/**
 * moOde audio player (C) 2014 Tim Curtis
 * http://moodeaudio.org
 *
 * This Program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3, or (at your option)
 * any later version.
 *
 * This Program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @version        8.1.1
 * @build          Wed, Dec 28, 2022 5:15 PM ET
 *
 */
var toggleHandler = function(e) {
	e = e;
	var o = $(e)
		.find("input");
	o.eq(0)
		.is(":checked") ? $(e)
		.removeClass("toggle-off") : $(e)
		.addClass("toggle-off"), o.eq(0)
		.click((function() {
			$(e)
				.toggleClass("toggle-off")
		})), o.eq(1)
		.click((function() {
			$(e)
				.toggleClass("toggle-off")
		}))
};
$(document)
	.ready((function() {
		$(".toggle")
			.each((function(e, o) {
				toggleHandler(o)
			}))
	}));


! function(t) {
	var a = new Array,
		e = new Array;
	t.fn.doAutosize = function(a) {
		var e = t(this)
			.data("minwidth"),
			i = t(this)
			.data("maxwidth"),
			n = "",
			u = t(this),
			s = t("#" + t(this)
				.data("tester_id"));
		if (n !== (n = u.val())) {
			var o = n.replace(/&/g, "&amp;")
				.replace(/\s/g, " ")
				.replace(/</g, "&lt;")
				.replace(/>/g, "&gt;");
			s.html(o);
			var d = s.width(),
				r = d + a.comfortZone >= e ? d + a.comfortZone : e;
			(r < u.width() && r >= e || r > e && r < i) && u.width(r)
		}
	}, t.fn.resetAutosize = function(a) {
		var e = t(this)
			.data("minwidth") || a.minInputWidth || t(this)
			.width(),
			i = t(this)
			.data("maxwidth") || a.maxInputWidth || t(this)
			.closest(".tagsinput")
			.width() - a.inputPadding,
			n = t(this),
			u = t("<tester/>")
			.css({
				position: "absolute",
				top: -9999,
				left: -9999,
				width: "auto",
				fontSize: n.css("fontSize"),
				fontFamily: n.css("fontFamily"),
				fontWeight: n.css("fontWeight"),
				letterSpacing: n.css("letterSpacing"),
				whiteSpace: "nowrap"
			}),
			s = t(this)
			.attr("id") + "_autosize_tester";
		!t("#" + s)
			.length > 0 && (u.attr("id", s), u.appendTo("body")), n.data("minwidth", e), n.data("maxwidth", i), n.data("tester_id", s), n.css("width", e)
	}, t.fn.addTag = function(i, n) {
		return n = jQuery.extend({
			focus: !1,
			callback: !0
		}, n), this.each((function() {
			var u = t(this)
				.attr("id"),
				s = t(this)
				.val()
				.split(a[u]);
			if ("" == s[0] && (s = new Array), i = jQuery.trim(i), n.unique) 1 == (o = t(this)
					.tagExist(i)) && t("#" + u + "_tag")
				.addClass("not_valid");
			else var o = !1;
			if ("" != i && 1 != o) {
				if (t("<span>")
					.addClass("tag")
					.append(t("<span>")
						.text(i)
						.append("&nbsp;&nbsp;"), t('<a class="tagsinput-remove-link fui-cross-16">', {
							href: "#",
							title: "Remove tag",
							text: ""
						})
						.click((function() {
							return t("#" + u)
								.removeTag(escape(i))
						})))
					.insertBefore("#" + u + "_addTag"), s.push(i), t("#" + u + "_tag")
					.val(""), n.focus ? t("#" + u + "_tag")
					.focus() : t("#" + u + "_tag")
					.blur(), t.fn.tagsInput.updateTagsField(this, s), n.callback && e[u] && e[u].onAddTag) e[u].onAddTag.call(this, i);
				if (e[u] && e[u].onChange) {
					var d = s.length;
					e[u].onChange.call(this, t(this), s[d - 1])
				}
			}
		})), !1
	}, t.fn.removeTag = function(n) {
		return n = unescape(n), this.each((function() {
			var u = t(this)
				.attr("id"),
				s = t(this)
				.val()
				.split(a[u]);
			for (t("#" + u + "_tagsinput .tag")
				.remove(), str = "", i = 0; i < s.length; i++) s[i] != n && (str = str + a[u] + s[i]);
			(t.fn.tagsInput.importTags(this, str), e[u] && e[u].onRemoveTag) && e[u].onRemoveTag.call(this, n)
		})), !1
	}, t.fn.tagExist = function(e) {
		var i = t(this)
			.attr("id"),
			n = t(this)
			.val()
			.split(a[i]);
		return jQuery.inArray(e, n) >= 0
	}, t.fn.importTags = function(a) {
		id = t(this)
			.attr("id"), t("#" + id + "_tagsinput .tag")
			.remove(), t.fn.tagsInput.importTags(this, a)
	}, t.fn.tagsInput = function(i) {
		var n = jQuery.extend({
			interactive: !0,
			defaultText: "",
			minChars: 0,
			width: "",
			height: "",
			autocomplete: {
				selectFirst: !1
			},
			hide: !0,
			delimiter: ",",
			unique: !0,
			removeWithBackspace: !0,
			placeholderColor: "#666666",
			autosize: !0,
			comfortZone: 20,
			inputPadding: 12
		}, i);
		return this.each((function() {
			n.hide && t(this)
				.hide();
			var i = t(this)
				.attr("id");
			i && !a[t(this)
				.attr("id")] || (i = t(this)
				.attr("id", "tags" + (new Date)
					.getTime())
				.attr("id"));
			var u = jQuery.extend({
				pid: i,
				real_input: "#" + i,
				holder: "#" + i + "_tagsinput",
				input_wrapper: "#" + i + "_addTag",
				fake_input: "#" + i + "_tag"
			}, n);
			a[i] = u.delimiter, (n.onAddTag || n.onRemoveTag || n.onChange) && (e[i] = new Array, e[i].onAddTag = n.onAddTag, e[i].onRemoveTag = n.onRemoveTag, e[i].onChange = n.onChange);
			var s = '<div id="' + i + '_tagsinput" class="tagsinput"><div class="tagsinput-add-container" id="' + i + '_addTag"><div class="tagsinput-add fui-plus-16"></div>';
			if (n.interactive && (s = s + '<input id="' + i + '_tag" value="" data-default="' + n.defaultText + '" />'), t(s += "</div></div>")
				.insertAfter(this), t(u.holder)
				.css("width", n.width), t(u.holder)
				.css("min-height", n.height), t(u.holder)
				.css("height", "100%"), "" != t(u.real_input)
				.val() && t.fn.tagsInput.importTags(t(u.real_input), t(u.real_input)
					.val()), n.interactive) {
				if (t(u.fake_input)
					.val(t(u.fake_input)
						.attr("data-default")), t(u.fake_input)
					.css("color", n.placeholderColor), t(u.fake_input)
					.resetAutosize(n), t(u.holder)
					.bind("click", u, (function(a) {
						t(a.data.fake_input)
							.focus()
					})), t(u.fake_input)
					.bind("focus", u, (function(a) {
						t(a.data.fake_input)
							.val() == t(a.data.fake_input)
							.attr("data-default") && t(a.data.fake_input)
							.val(""), t(a.data.fake_input)
							.css("color", "#000000")
					})), null != n.autocomplete_url) {
					for (attrname in autocomplete_options = {
						source: n.autocomplete_url
					}, n.autocomplete) autocomplete_options[attrname] = n.autocomplete[attrname];
					void 0 !== jQuery.Autocompleter ? (t(u.fake_input)
						.autocomplete(n.autocomplete_url, n.autocomplete), t(u.fake_input)
						.bind("result", u, (function(a, e, u) {
							e && t("#" + i)
								.addTag(e[0] + "", {
									focus: !0,
									unique: n.unique
								})
						}))) : void 0 !== jQuery.ui.autocomplete && (t(u.fake_input)
						.autocomplete(autocomplete_options), t(u.fake_input)
						.bind("autocompleteselect", u, (function(a, e) {
							return t(a.data.real_input)
								.addTag(e.item.value, {
									focus: !0,
									unique: n.unique
								}), !1
						})))
				} else t(u.fake_input)
					.bind("blur", u, (function(a) {
						var e = t(this)
							.attr("data-default");
						return "" != t(a.data.fake_input)
							.val() && t(a.data.fake_input)
							.val() != e ? a.data.minChars <= t(a.data.fake_input)
							.val()
							.length && (!a.data.maxChars || a.data.maxChars >= t(a.data.fake_input)
								.val()
								.length) && t(a.data.real_input)
							.addTag(t(a.data.fake_input)
								.val(), {
									focus: !0,
									unique: n.unique
								}) : (t(a.data.fake_input)
								.val(t(a.data.fake_input)
									.attr("data-default")), t(a.data.fake_input)
								.css("color", n.placeholderColor)), !1
					}));
				t(u.fake_input)
					.bind("keypress", u, (function(a) {
						if (a.which == a.data.delimiter.charCodeAt(0) || 13 == a.which) return a.preventDefault(), a.data.minChars <= t(a.data.fake_input)
							.val()
							.length && (!a.data.maxChars || a.data.maxChars >= t(a.data.fake_input)
								.val()
								.length) && t(a.data.real_input)
							.addTag(t(a.data.fake_input)
								.val(), {
									focus: !0,
									unique: n.unique
								}), t(a.data.fake_input)
							.resetAutosize(n), !1;
						a.data.autosize && t(a.data.fake_input)
							.doAutosize(n)
					})), u.removeWithBackspace && t(u.fake_input)
					.bind("keydown", (function(a) {
						if (8 == a.keyCode && "" == t(this)
							.val()) {
							a.preventDefault();
							var e = t(this)
								.closest(".tagsinput")
								.find(".tag:last")
								.text(),
								i = t(this)
								.attr("id")
								.replace(/_tag$/, "");
							e = e.replace(/[\s\u00a0]+x$/, ""), t("#" + i)
								.removeTag(escape(e)), t(this)
								.trigger("focus")
						}
					})), t(u.fake_input)
					.blur(), u.unique && t(u.fake_input)
					.keydown((function(a) {
						(8 == a.keyCode || String.fromCharCode(a.which)
							.match(/\w+|[áéíóúÁÉÍÓÚñÑ,/]+/)) && t(this)
							.removeClass("not_valid")
					}))
			}
		})), this
	}, t.fn.tagsInput.updateTagsField = function(e, i) {
		var n = t(e)
			.attr("id");
		t(e)
			.val(i.join(a[n]))
	}, t.fn.tagsInput.importTags = function(n, u) {
		t(n)
			.val("");
		var s = t(n)
			.attr("id"),
			o = u.split(a[s]);
		for (i = 0; i < o.length; i++) t(n)
			.addTag(o[i], {
				focus: !1,
				callback: !1
			});
		e[s] && e[s].onChange && e[s].onChange.call(n, n, o[i])
	}
}(jQuery);


! function(e, t, a) {
	var l, r, o = "placeholder" in t.createElement("input"),
		d = "placeholder" in t.createElement("textarea"),
		i = a.fn,
		c = a.valHooks;

	function n(e, l) {
		var r = a(this);
		if (this.value == r.attr("placeholder") && r.hasClass("placeholder"))
			if (r.data("placeholder-password")) {
				if (r = r.hide()
					.next()
					.show()
					.attr("id", r.removeAttr("id")
						.data("placeholder-id")), !0 === e) return r[0].value = l;
				r.focus()
			} else this.value = "", r.removeClass("placeholder"), this == t.activeElement && this.select()
	}

	function h() {
		var e, t, l, r, o = a(this),
			d = this.id;
		if ("" == this.value) {
			if ("password" == this.type) {
				if (!o.data("placeholder-textinput")) {
					try {
						e = o.clone()
							.attr({
								type: "text"
							})
					} catch (o) {
						e = a("<input>")
							.attr(a.extend((t = this, l = {}, r = /^jQuery\d+$/, a.each(t.attributes, (function(e, t) {
								t.specified && !r.test(t.name) && (l[t.name] = t.value)
							})), l), {
								type: "text"
							}))
					}
					e.removeAttr("name")
						.data({
							"placeholder-password": !0,
							"placeholder-id": d
						})
						.bind("focus.placeholder", n), o.data({
							"placeholder-textinput": e,
							"placeholder-id": d
						})
						.before(e)
				}
				o = o.removeAttr("id")
					.hide()
					.prev()
					.attr("id", d)
					.show()
			}
			o.addClass("placeholder"), o[0].value = o.attr("placeholder")
		} else o.removeClass("placeholder")
	}
	o && d ? (r = i.placeholder = function() {
			return this
		})
		.input = r.textarea = !0 : ((r = i.placeholder = function() {
				return this.filter((o ? "textarea" : ":input") + "[placeholder]")
					.not(".placeholder")
					.bind({
						"focus.placeholder": n,
						"blur.placeholder": h
					})
					.data("placeholder-enabled", !0)
					.trigger("blur.placeholder"), this
			})
			.input = o, r.textarea = d, l = {
				get: function(e) {
					var t = a(e);
					return t.data("placeholder-enabled") && t.hasClass("placeholder") ? "" : e.value
				},
				set: function(e, l) {
					var r = a(e);
					return r.data("placeholder-enabled") ? ("" == l ? (e.value = l, e != t.activeElement && h.call(e)) : r.hasClass("placeholder") && n.call(e, !0, l) || (e.value = l), r) : e.value = l
				}
			}, o || (c.input = l), d || (c.textarea = l), a((function() {
				a(t)
					.delegate("form", "submit.placeholder", (function() {
						var e = a(".placeholder", this)
							.each(n);
						setTimeout((function() {
							e.each(h)
						}), 10)
					}))
			})), a(e)
			.bind("beforeunload.placeholder", (function() {
				a(".placeholder")
					.each((function() {
						this.value = ""
					}))
			})))
}(this, document, jQuery);


window.ParsleyConfig = window.ParsleyConfig || {},
	function(e) {
		window.ParsleyConfig = e.extend(!0, {}, window.ParsleyConfig, {
			messages: {
				defaultMessage: "This value seems to be invalid.",
				type: {
					email: "This value should be a valid email.",
					url: "This value should be a valid url.",
					urlstrict: "This value should be a valid url.",
					number: "This value should be a valid number.",
					digits: "This value should be digits.",
					dateIso: "This value should be a valid date (YYYY-MM-DD).",
					alphanum: "This value should be alphanumeric."
				},
				notnull: "This value should not be null.",
				notblank: "This value should not be blank.",
				required: "This value is required.",
				regexp: "This value seems to be invalid.",
				min: "This value should be greater than %s.",
				max: "This value should be lower than %s.",
				range: "This value should be between %s and %s.",
				minlength: "This value is too short. It should have %s characters or more.",
				maxlength: "This value is too long. It should have %s characters or less.",
				rangelength: "This value length is invalid. It should be between %s and %s characters long.",
				mincheck: "You must select at least %s choices.",
				maxcheck: "You must select %s choices or less.",
				rangecheck: "You must select between %s and %s choices.",
				equalto: "This value should be the same.",
				minwords: "This value should have %s words at least.",
				maxwords: "This value should have %s words maximum.",
				rangewords: "This value should have between %s and %s words.",
				greaterthan: "This value should be greater than %s.",
				lessthan: "This value should be less than %s.",
				beforedate: "This date should be before %s.",
				afterdate: "This date should be after %s."
			}
		})
	}(window.jQuery || window.Zepto);


$((function() {
		$("select")
			.selectpicker()
	})), $(document)
	.ready((function() {
		$(".todo li")
			.click((function() {
				$(this)
					.toggleClass("todo-done")
			})), $("[data-toggle=tooltip]")
			.tooltip("show"), $("#tagsinput")
			.tagsInput(), $("input, textarea")
			.placeholder(), $(".pagination a")
			.click((function() {
				$(this)
					.parent()
					.hasClass("previous") || $(this)
					.parent()
					.hasClass("next") || ($(this)
						.parent()
						.siblings("li")
						.removeClass("active"), $(this)
						.parent()
						.addClass("active"))
			})), $(".btn-group a")
			.click((function() {
				$(this)
					.siblings()
					.removeClass("active"), $(this)
					.addClass("active")
			})), $("a[href='#']")
			.click((function() {
				return !1
			}))
	}));


jQuery(document)
	.ready((function(t) {
		"use strict";
		null != window.ui_notify && ui_notify(), GLOBAL.scriptSection = "configs", t("#config-tabs")
			.css("display", "flex"), t("#panel-footer")
			.css("display", "none"), t(".dropdown-menu > li > a")
			.css("color", "var(--config-text-color)"), "0px" != t(".container")
			.css("margin-right") && (t("#panel-header")
				.css("margin-right", "25vw"), t("#panel-header")
				.css("margin-left", "25vw")), t("meta[name=viewport]")
			.attr("content", "height=" + t(window)
				.height() + ", width=" + t(window)
				.width() + ", initial-scale=1.0, maximum-scale=1.0, viewport-fit=cover"), t.post("command/cfg-table.php?cmd=upd_cfg_system", {
				library_pixelratio: window.devicePixelRatio
			}), t.getJSON("command/cfg-table.php?cmd=get_cfg_tables_no_radio", (function(e) {
				SESSION.json = e.cfg_system, THEME.json = e.cfg_theme, NETWORK.json = e.cfg_network, t("#config-back")
					.show(), UI.mobile = t(window)
					.width() < 480, setFontSize();
				themeOp;
				themeOp, themeColor = str2hex(THEME.json[SESSION.json.themename].tx_color), themeBack = "rgba(" + THEME.json[SESSION.json.themename].bg_color + "," + SESSION.json.alphablend + ")", themeMcolor = str2hex(THEME.json[SESSION.json.themename].tx_color), tempcolor = splitColor(t(".dropdown-menu")
					.css("background-color")), themeOp = tempcolor[3], themeMback = "rgba(" + THEME.json[SESSION.json.themename].bg_color + "," + themeOp + ")", accentColor = themeToColors(SESSION.json.accent_color), document.body.style.setProperty("--themetext", themeMcolor);
				var o = "data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='30' height='30'><circle fill='%23" + accentColor.substr(1) + "' cx='14' cy='14.5' r='11.5'/></svg>";
				getCSSRule(".toggle .toggle-radio")
					.style.backgroundImage = 'url("' + o + '")', document.body.style.setProperty("--config_modal_btn_bg", "rgba(64,64,64,0.75)"), t(".modal-footer .btn")
					.css("background-color", "rgba(128,128,128,.35)"), t(".lib-config")
					.length ? t("#lib-config-btn")
					.addClass("active") : t(".snd-config")
					.length ? t("#snd-config-btn")
					.addClass("active") : t(".net-config")
					.length ? t("#net-config-btn")
					.addClass("active") : t(".sys-config")
					.length ? t("#sys-config-btn")
					.addClass("active") : t(".ren-config")
					.length && t("#ren-config-btn")
					.addClass("active"), t.pnotify.defaults.history = !1, engineMpdLite(), engineCmdLite(), 1 == GLOBAL.thmUpdInitiated && t(".busy-spinner")
					.show(), GLOBAL.chromium && "On" == SESSION.json.on_screen_kbd && initializeOSK()
			})), t("#config-back a")
			.click((function() {
				"/index.php" == t(this)
					.attr("href") && t("#config-tabs")
					.hide()
			})), t(".btn-submit")
			.click((function() {
				t(".busy-spinner")
					.show()
			})), t("#eqp-curve-name")
			.change((function() {
				location.assign("http://" + location.host + location.pathname + "?curve=" + t(this)
					.val())
			})), t("#eqg-curve-name")
			.change((function() {
				location.assign("http://" + location.host + "/eqg-config.php?curve=" + t(this)
					.val())
			})), t("#master-gain-up, #master-gain-dn")
			.on("mousedown mouseup click", (function(e) {
				if (e.preventDefault(), "mousedown" == e.type) {
					var o = t(this)
						.attr("id");
					eqGainUpdInterval = setInterval((function() {
						updEqpMasterGainSlider(o)
					}), 50)
				} else "mouseup" == e.type ? clearInterval(eqGainUpdInterval) : "click" == e.type && updEqpMasterGainSlider(t(this)
					.attr("id"))
			})), t("#new-curvename")
			.on("shown.bs.modal", (function() {
				t("#new-curvename-input")
					.focus()
			})), t("#eth0-method")
			.length && "static" == t("#eth0-method")
			.val() && t("#eth0-static")
			.show(), t("#wlan0-method")
			.length && "static" == t("#wlan0-method")
			.val() && t("#wlan0-static")
			.show(), t("#eth0-method")
			.change((function() {
				"static" == t(this)
					.val() ? t("#eth0-static")
					.show() : t("#eth0-static")
					.hide()
			})), t("#wlan0-method")
			.change((function() {
				"static" == t(this)
					.val() ? "None (activates AP mode)" != t("#wlan0ssid")
					.val() ? t("#wlan0-static")
					.show() : notify("needssid") : t("#wlan0-static")
					.hide()
			})), t("#manual-ssid")
			.on("shown.bs.modal", (function() {
				t("#wlan0otherssid")
					.focus()
			})), t("#wlan0ssid")
			.change((function() {
				t("#wlan0ssid")
					.val() == NETWORK.json.wlan0.wlanssid ? t("#wlan0pwd")
					.val(NETWORK.json.wlan0.wlan_psk) : t("#wlan0pwd")
					.val(""), "static" == t("#wlan0-method")
					.val() && ("" == t(this)
						.val() || "None (activates AP mode)" == t(this)
						.val() ? (t("#wlan0-static")
							.hide(), notify("needdhcp")) : t("#wlan0-static")
						.show())
			})), t("#apdssid")
			.on("input", (function() {
				t("#apdssid")
					.val() == NETWORK.json.apd0.wlanssid ? t("#apdpwd")
					.val(NETWORK.json.apd0.wlan_psk) : t("#apdpwd")
					.val("")
			})), t(".show-hide-password")
			.click((function(e) {
				var o = document.getElementById(t(this)
					.data("id"));
				"" != t("#" + t(this)
						.data("id"))
					.val() && ("password" == o.type ? o.type = "text" : o.type = "password")
			})), t("#type")
			.length && t("#mounttype")
			.val(t("#type")
				.val()), t("#type")
			.change((function() {
				t("#mounttype")
					.val(t(this)
						.val()), "cifs" == t(this)
					.val() ? (t("#userid-password")
						.show(), t("#edit-server")
						.show(), t("#advanced-options")
						.show(), t("#rw-size")
						.show(), t("#options")
						.val("ro,noserverino,dir_mode=0777,file_mode=0777")) : "nfs" == t(this)
					.val() && (t("#userid-password")
						.hide(), t("#edit-server")
						.show(), t("#advanced-options")
						.show(), t("#rw-size")
						.hide(), t("#options")
						.val("soft,timeo=10,retrans=1,ro,nolock"))
			})), t("#manual-server")
			.on("shown.bs.modal", (function() {
				t("#manualserver")
					.focus()
			})), t("#editserver")
			.click((function(e) {
				t("#manualserver")
					.val(t("#address")
						.val()
						.trim())
			})), t("#view-thmcache-status")
			.click((function(e) {
				t.getJSON("command/music-library.php?cmd=thumcache_status", (function(e) {
					t("#thmcache-status")
						.html(e)
				}))
			})), t("#sox-enabled, #sox-sample-rate")
			.change((function() {
				"Yes" == t("#sox-enabled")
					.val() && "*" != t("#sox-sample-rate")
					.val() ? t("#selective_resample")
					.show() : t("#selective_resample")
					.hide()
			})), t("#sox-enabled")
			.length && "Yes" == t("#sox-enabled")
			.val() && "*" != t("#sox-sample-rate")
			.val() && t("#selective_resample")
			.show(), t("#sox_quality")
			.change((function() {
				"custom" == t("#sox_quality")
					.val() ? t("#sox_custom_recipe")
					.show() : t("#sox_custom_recipe")
					.hide()
			})), t("#sox_quality")
			.length && "custom" == t("#sox_quality")
			.val() && t("#sox_custom_recipe")
			.show(), t("#sysinfo-menu-item")
			.click((function(t) {
				notify("gathering_info", "", "3_seconds")
			})), t("#multiroom-tx-adv-options-label")
			.click((function(e) {
				t("#multiroom-tx-adv-options")
					.toggleClass("hide");
				var o = "Show" == t("#multiroom-tx-adv-options-label")
					.html() ? "隐藏" : "显示";
				t("#multiroom-tx-adv-options-label")
					.html(o), t.post("command/multiroom.php?cmd=upd_tx_adv_toggle", {
						adv_toggle: o
					})
			})), t("#multiroom-rx-adv-options-label")
			.click((function(e) {
				t("#multiroom-rx-adv-options")
					.toggleClass("hide");
				var o = "Show" == t("#multiroom-rx-adv-options-label")
					.html() ? "隐藏" : "显示";
				t("#multiroom-rx-adv-options-label")
					.html(o), t.post("command/multiroom.php?cmd=upd_rx_adv_toggle", {
						adv_toggle: o
					})
			})), t("#backup-create")
			.click((function(t) {
				GLOBAL.backupCreate = !0
			})), t(".config-info-toggle")
			.click((function(e) {
				var o = "#" + t(this)
					.data("cmd");
				"none" == t(o)
					.css("display") ? t(o)
					.css("display", "block") : t(o)
					.css("display", "none")
			}))
	}));


//# sourceMappingURL=../maps/js/config.min.js.map